version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: musinsa-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}     # root 비밀번호
      MYSQL_DATABASE: musinsa_shop  # 초기 생성될 DB
      MYSQL_USER: ${MYSQL_USER}         # 권한 부여한...
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}          # 비밀번호
      # 인코딩 설정 추가
      LANG: C.UTF-8 # 컨테이너 기본 언어를 UTF-8로 설정
      TZ: Asia/Seoul # 시간대를 서울로 설정
      CHARACTER_SET_SERVER: utf8mb4 # MySQL 기본 문자셋을 utf8mb4로 설정
      COLLATION_SERVER: utf8mb4_unicode_ci # 정렬 방식 및 비교 방식 설정
    ports:
      - "3300:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  redis:
    image: redis:7.0-alpine
    container_name: musinsa-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: musinsa-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
#    image: confluentinc/cp-kafka:latest
    image: confluentinc/cp-kafka:7.4.3 # 최신 버전 대신 명시적 버전 사용
    container_name: musinsa-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: musinsa-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

volumes:
  mysql_data:
  redis_data: