plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Dev Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.assertj:assertj-core:3.24.2' // 단언용

    // .env
    implementation 'me.paulschwarz:spring-dotenv:3.0.0'

    // init.sql -> Flyway 사용하기 위해서
    implementation 'org.flywaydb:flyway-mysql' // MySQL 지원 확장 추가
    implementation 'org.flywaydb:flyway-core'
    // implementation 'org.flywaydb:flyway-core:9.22.3' // 또는 최신 버전


    // --- QueryDSL (Spring Boot 3.x / Jakarta) ---
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'      // JPA 메타모델 참조용 (컴파일/런타임)
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta' // Q클래스 생성기(Annotation Processor)
    // 아래 두 줄은 일부 환경에서 APT가 Jakarta 어노테이션을 못 찾는 문제 예방용 (선택적이지만 권장)
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty "file.encoding", "UTF-8" // 테스트 실행 시 한글 인코딩 문제 해결
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8" // 자바 컴파일 시 한글 소스 인코딩
}